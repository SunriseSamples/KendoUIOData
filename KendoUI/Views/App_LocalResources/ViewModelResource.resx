<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category_Description" xml:space="preserve">
    <value>分类说明。</value>
  </data>
  <data name="Category_Name" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="Category_Prompt" xml:space="preserve">
    <value>分类提示。</value>
  </data>
  <data name="Category_ShortName" xml:space="preserve">
    <value>分类1</value>
  </data>
  <data name="Code_Description" xml:space="preserve">
    <value>编码说明。</value>
  </data>
  <data name="Code_Name" xml:space="preserve">
    <value>编码</value>
  </data>
  <data name="Code_Prompt" xml:space="preserve">
    <value>编码提示。</value>
  </data>
  <data name="Code_ShortName" xml:space="preserve">
    <value>编码1</value>
  </data>
  <data name="Culture_Description" xml:space="preserve">
    <value>文化说明。</value>
  </data>
  <data name="Culture_Name" xml:space="preserve">
    <value>文化</value>
  </data>
  <data name="Culture_Prompt" xml:space="preserve">
    <value>文化提示。</value>
  </data>
  <data name="Culture_ShortName" xml:space="preserve">
    <value>文化1</value>
  </data>
  <data name="Currency_Description" xml:space="preserve">
    <value>币制说明。</value>
  </data>
  <data name="Currency_Name" xml:space="preserve">
    <value>币制</value>
  </data>
  <data name="Currency_Prompt" xml:space="preserve">
    <value>币制提示。</value>
  </data>
  <data name="Currency_ShortName" xml:space="preserve">
    <value>币制1</value>
  </data>
  <data name="Description_Description" xml:space="preserve">
    <value>说明说明。</value>
  </data>
  <data name="Description_Name" xml:space="preserve">
    <value>说明</value>
  </data>
  <data name="Description_Prompt" xml:space="preserve">
    <value>说明提示。</value>
  </data>
  <data name="Description_ShortName" xml:space="preserve">
    <value>说明1</value>
  </data>
  <data name="ID_Description" xml:space="preserve">
    <value>编号说明。</value>
  </data>
  <data name="ID_Name" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="ID_Prompt" xml:space="preserve">
    <value>编号提示。</value>
  </data>
  <data name="ID_ShortName" xml:space="preserve">
    <value>编号1</value>
  </data>
  <data name="ImageUrl_Description" xml:space="preserve">
    <value>图片说明。</value>
  </data>
  <data name="ImageUrl_Name" xml:space="preserve">
    <value>图片</value>
  </data>
  <data name="ImageUrl_Prompt" xml:space="preserve">
    <value>图片提示。</value>
  </data>
  <data name="ImageUrl_ShortName" xml:space="preserve">
    <value>图片1</value>
  </data>
  <data name="IntroductionUrl_Description" xml:space="preserve">
    <value>介绍说明。</value>
  </data>
  <data name="IntroductionUrl_Name" xml:space="preserve">
    <value>介绍</value>
  </data>
  <data name="IntroductionUrl_Prompt" xml:space="preserve">
    <value>介绍提示。</value>
  </data>
  <data name="IntroductionUrl_ShortName" xml:space="preserve">
    <value>介绍1</value>
  </data>
  <data name="Memo_Description" xml:space="preserve">
    <value>备注说明。</value>
  </data>
  <data name="Memo_Name" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="Memo_Prompt" xml:space="preserve">
    <value>备注提示。</value>
  </data>
  <data name="Memo_ShortName" xml:space="preserve">
    <value>备注1</value>
  </data>
  <data name="Name_Description" xml:space="preserve">
    <value>名称说明。</value>
  </data>
  <data name="Name_Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Name_Prompt" xml:space="preserve">
    <value>名称提示。</value>
  </data>
  <data name="Name_ShortName" xml:space="preserve">
    <value>名称1</value>
  </data>
  <data name="NullDisplayText" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="UnitPrice_Description" xml:space="preserve">
    <value>单价说明。</value>
  </data>
  <data name="UnitPrice_Format" xml:space="preserve">
    <value>{0:0.00}</value>
  </data>
  <data name="UnitPrice_Name" xml:space="preserve">
    <value>单价</value>
  </data>
  <data name="UnitPrice_Prompt" xml:space="preserve">
    <value>单价提示。</value>
  </data>
  <data name="UnitPrice_ShortName" xml:space="preserve">
    <value>单价1</value>
  </data>
</root>