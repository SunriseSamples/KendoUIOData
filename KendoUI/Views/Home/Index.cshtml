@using KendoUI.Models;
<div id="body">
    <section class="content-wrapper clear-fix">
        <h3>Telerik Kendo UI Core</h3>
        <div id="clientsDb">
            @{
                // 参考：
                // http://blogs.telerik.com/kendoui/posts/11-08-25/shields_up_web_service_abstraction_with_kendo_ui
                // http://blogs.telerik.com/kendoui/posts/12-10-25/using_kendo_ui_with_mvc4_webapi_odata_and_ef
                var serviceBaseUrl = "http://localhost:9171/odata/Products";
            }
            @(Html.Kendo().Grid<ProductViewModel>()
                .Name("grid")
                .Columns(columns =>
                {
                    //columns.Bound(c => c.ID).Width(140);
                    columns.Bound(c => c.Name).Width(140).Title("名称");
                    columns.Bound(c => c.Price).Width(190).Title("价格");
                    columns.Bound(c => c.Category).Width(110).Title("类别");
                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(160).Title("操作");
                })
                .ToolBar(toolbar => toolbar.Create())
                .Editable(editable => editable.Mode(GridEditMode.PopUp)
                    //.TemplateName("")
                )
                .DataSource(dataSource => dataSource
                    .Custom()
                    .Type("odata")
                    .Schema(schema => schema
                        .Model(model => model.Id(p => p.ID))
                        .Type("json")
                        .Data("value")
                        .Total(data => "function (data) { return data['@odata.count']; }")
                    )
                    .Transport(transport => transport
                        .Create(create => create.Url(serviceBaseUrl).ContentType("application/json;IEEE754Compatible=true"))
                        .Read(read => read.Url(serviceBaseUrl).DataType("json").Cache(true))
                        .Update(update => update.Url(serviceBaseUrl).ContentType("application/json;IEEE754Compatible=true").Data("changeUrl"))
                        .Destroy(destroy => destroy.Url(serviceBaseUrl).Data("changeUrl"))
                        .ParameterMap("parameterMap")
                    )
                    .PageSize(10)
                    .ServerPaging(true)
                    .ServerSorting(true)
                    .ServerFiltering(true)
                    //.ServerGrouping(true)
                    .Events(events => events.Error("errorHandler"))
                )
                .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(10)
                )
                .Sortable()
                .Filterable()
                .Groupable()
            )
        </div>
        <script>
            function changeUrl(data) {
                this.url = "@(serviceBaseUrl)" + "(" + data.ID + ")";
                return data;
            }

            function parameterMap(data, operation) {
                //var parameters = "\n";
                //parameters += "data = " + JSON.stringify(data) + "\n";
                //parameters += "operation = " + JSON.stringify(operation) + "\n";
                //alert("parameterMap(" + parameters + ")");
                var result = kendo.data.transports.odata.parameterMap(data, operation);
                //alert("result = " + JSON.stringify(result));
                if (result) {
                    //delete result.$format;      // remove format parameter.
                    delete result.$inlinecount; // remove inlinecount parameter.
                    result.$count = true;       // add count parameter.
                    if (result.$filter) {
                        // substringof('xYz',WorkUnitCode) needs to change to contains(WorkUnitCode,'06')
                        if (result.$filter.substring(0, 12) == "substringof(") {
                            var parms = result.$filter.substring(12, result.$filter.length - 1).split(",");
                            result.$filter = kendo.format("contains({0},{1})", parms[1], parms[0]);
                        }
                    }
                }
                //$("#message").html(result);
                return result;
            }

            function errorHandler(e) {
                //$("#message").html(e.xhr.responseText);
                var message = e.xhr.responseJSON["error"].message;
                var innerMessage = e.xhr.responseJSON["error"].innererror.message;
                alert(message + "\n" + innerMessage);
            }
        </script>
        <p id="message" />
    </section>
</div>
