@model KendoUI.Models.OData.Models.Product
@using KendoUI.Models;
@using KendoUI.Models.OData.Models;
@using KendoUI.Views.App_LocalResources;
@using System.Collections;

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name, new { title = ViewModelResource.Name_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitPrice, new { title = ViewModelResource.UnitPrice_Description })
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(model => model.CurrencyID)
                .Name("CurrencyID")
                .BindTo((IEnumerable<SelectListItem>)ViewData[ViewData.TemplateInfo.GetFullHtmlFieldName("CurrencyID") + "_Data"])
                .Events(events => events.Change("onCurrencyIDChange"))
            )
            @Html.EditorFor(model => model.UnitPrice, new { currency = ((IEnumerable<Currency>)ViewData["currencies"]).FirstOrDefault(c => c.IsoNumericCode == Model.CurrencyID) })
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryID, new { title = ViewModelResource.Category_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CategoryID)
            @Html.ValidationMessageFor(model => model.CategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description, new { title = ViewModelResource.Description_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IntroductionUrl, new { title = ViewModelResource.IntroductionUrl_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IntroductionUrl)
            @Html.ValidationMessageFor(model => model.IntroductionUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImageUrl, new { title = ViewModelResource.ImageUrl_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImageUrl)
            @Html.ValidationMessageFor(model => model.ImageUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Memo, new { title = ViewModelResource.Memo_Description })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Memo)
            @Html.ValidationMessageFor(model => model.Memo)
        </div>
    </fieldset>
}